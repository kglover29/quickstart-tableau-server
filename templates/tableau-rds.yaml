---
# This template is designed to be interchangable with other Database cfn templates. This is the required parameter set for compatibility
# DBMasterUserPassword
# CustomDBSecurityGroup
# Subnet1ID
# Subnet2ID
# DBAutoMinorVersionUpgrade
# DBAllocatedStorage
# DBBackupRetentionPeriod
# DBInstanceClass
# DBIops
# DBMasterUsername
# DBMultiAZ
# DBPort
# DBAllocatedStorageEncrypted
# DBStorageType
# VpcCidr
AWSTemplateFormatVersion: 2010-09-09
Description: RDS Postgres Database for use in Atlassian Standard Infrastructure (qs-1aj6s44e4)
Parameters:
  DBAutoMinorVersionUpgrade:
    Default: true
    AllowedValues:
      - true
      - false
    Description: "Select true/false to setup Auto Minor Version upgrade. e.g. PostgreSQL 9.6.8 -> 9.6.11"
    Type: String
  DBBackupRetentionPeriod: 
    Default: "7"
    Description: "The number of days for which automatic database snapshots are retained."
    Type: String
  DBInstanceClass:
    Default: db.m5.large
    AllowedValues:
      - db.m5.large
      - db.m5.xlarge
      - db.m5.2xlarge
      - db.m5.4xlarge
      - db.m5.12xlarge
      - db.m5.24xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.t3.medium
      - db.t3.large
      - db.t3.xlarge
      - db.t3.2xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
    ConstraintDescription: Must be a valid RDS instance class from the list
    Description: RDS instance type
    Type: String
  DBIops:
    Default: 1000
    ConstraintDescription: Must be in the range 1000 - 30000.
    Description: 'Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00.'
    MinValue: 1000
    MaxValue: 30000
    Type: Number
  DBMasterUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
    Default: postgres
    Description: The database admin account username
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DBMasterUserPassword:
    AllowedPattern: >-
            ^(?=^.{8,255}$)(?=.*[a-z])(?=.*[A-Z])(?=.*\d)((?=.*[^A-Za-z0-9])(?!.*[@/"'])).*$
    ConstraintDescription: >-
            'Min 8 chars. Must include 1 uppercase, 1 lowercase, 1 number, 1 symbol'
    Description: Password for the master ('postgres') account.
    MinLength: 8
    MaxLength: 128
    NoEcho: true
    Type: String
  DBMultiAZ:
    Description: Whether to provision a multi-AZ RDS instance.
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Type: String
  DBAllocatedStorage:
    Default: 10
    Description: Database allocated storage size, in gigabytes (GB). If you choose Provisioned IOPS, storage should be between 100 and 6144
    Type: Number
  DBAllocatedStorageEncrypted:
    Default: false
    AllowedValues:
      - true
      - false
    Description: Whether or not to encrypt the database
    Type: String
  DBStorageType:
    Default: General Purpose (SSD)
    AllowedValues:
      - General Purpose (SSD)
      - Provisioned IOPS
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
    Description: Database storage type
    Type: String
  CustomDBSecurityGroup:
    Description: The security group to apply to the database
    Type: String
    # Type: AWS::EC2::SecurityGroup::Id
    Default: ''
  SourceCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: IP address/range to allow access from
    Type: String
  Subnet1ID:
    Description: Private Subnet 1 ID
    Type: AWS::EC2::Subnet::Id
  Subnet2ID:
    Description: Private Subnet 2 ID
    Type: AWS::EC2::Subnet::Id
  VpcId:
    Description: The ID of the VPC into which to deploy the cluster
    Type: AWS::EC2::VPC::Id

Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, io1]
  UseDatabaseEncryption:
    !Equals [!Ref DBAllocatedStorageEncrypted, true]
  NoDatabaseSecurityGroup:
    !Equals [!Ref CustomDBSecurityGroup, '']
  HasDatabaseSecurityGroup:
    !Not [!Condition 'NoDatabaseSecurityGroup']

Resources:
  DBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "Subnets available for the Postgres database instance"
      SubnetIds: 
       - !Ref Subnet1ID
       - !Ref Subnet2ID
  EncryptionKey:
    Condition: UseDatabaseEncryption
    DeletionPolicy: Retain
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: !Sub "${AWS::StackName}"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Encryption Key", StackName: !Ref 'AWS::StackName']
  EncryptionKeyAlias:
    Condition: UseDatabaseEncryption
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}"
      TargetKeyId: !Ref EncryptionKey
  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      AutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      DBInstanceClass: !Ref DBInstanceClass
      # In the next line of code the '-DB' delimeter is used to get the root stack name for database identifier
      # 'AWS::StackName' produces MASTER_STACK_NAME-DB (as DB is the name of the nested stack resource).
      # DBInstanceIdentifier: !Sub ["${RootStack}-db", RootStack: !Select [0, !Split ['-DB', !Ref 'AWS::StackName']]]
      DBInstanceIdentifier: !Ref 'AWS::StackName'
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: '9.6'
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref 'AWS::NoValue']
      KmsKeyId: !If [UseDatabaseEncryption, !GetAtt EncryptionKey.Arn, !Ref 'AWS::NoValue']
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      MultiAZ: !Ref DBMultiAZ
      StorageEncrypted: !If [UseDatabaseEncryption, !Ref DBAllocatedStorageEncrypted, !Ref 'AWS::NoValue']
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Tags:
        - Key: Name
          Value: !Sub ["${StackName} Confluence PostgreSQL Database", StackName: !Ref 'AWS::StackName']
      VPCSecurityGroups: 
        !If 
          - HasDatabaseSecurityGroup 
          - [!Ref 'CustomDBSecurityGroup']
          - [!Ref 'NewDBSecurityGroup']
  NewDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: NoDatabaseSecurityGroup
    Properties:
      VpcId: !Ref 'VpcId'
      GroupDescription: !Sub 'Enable TCP access via ports 5432, plus all access from within the vpc'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          # CidrIp: !GetAtt 'VPCStack.Outputs.VPCID'
          # CidrIp: !GetAtt 'VpcInfo.CidrBlock'
          CidrIp: !Ref 'SourceCIDR'

Outputs:
  RDSEndPointAddress:
    Description: The Database Connection String
    Value: !GetAtt DB.Endpoint.Address
  RDSEndPointPort:
    Description: The port the DB endpoint listens on
    Value: !GetAtt DB.Endpoint.Port
  RDSEncryptionKey:
    Condition: UseDatabaseEncryption
    Description: The alias of the encryption key created for RDS
    Value: !Ref EncryptionKeyAlias
  SecurityGroup:
    Description: The security group the DB instance belong to
    Value: !GetAtt NewDBSecurityGroup.GroupId
